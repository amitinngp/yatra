swagger: "2.0"
info:
  description: "This is a sample server Petstore server.  You can find out more about     Swagger at [http://swagger.io](http://swagger.io) or on [irc.freenode.net, #swagger](http://swagger.io/irc/).      For this sample, you can use the api key `special-key` to test the authorization     filters."
  version: "1.0.0"
  title: "School Api"
  termsOfService: "http://swagger.io/terms/"
  contact:
    email: "apiteam@swagger.io"
  license:
    name: "Apache 2.0"
    url: "http://www.apache.org/licenses/LICENSE-2.0.html"
host: "petstore.swagger.io"
basePath: "/v1"
tags:
- name: "principal"
  description: "Operations about user"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"
- name: "student"
  description: "Operations about principal"
  externalDocs:
    description: "Find out more about our store"
    url: "http://swagger.io"    
schemes:
- "https"
- "http"
paths:
  /principal:
    get:
      tags:
      - "principal"
      summary: "Create principal"
      description: "This can only be done by the logged in principal."
      operationId: "getprincipal"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created principal object"
        required: true
        schema:
          $ref: "#/definitions/Principal"
      responses:
        default:
          description: "successful operation"
  /student:
    get:
      tags:
      - "student"
      summary: "Create student"
      description: "This can only be done by the logged in student."
      operationId: "getstudent"
      produces:
      - "application/xml"
      - "application/json"
      parameters:
      - in: "body"
        name: "body"
        description: "Created principal object"
        required: true
        schema:
          $ref: "#/definitions/Student"
      responses:
        default:
          description: "successful operation"  
definitions:
  Principal:
    type: "object"
    properties:
      id:
        type: "integer"
        format: "int64"
      firstName:
        type: "string"
      middleName:
        type: "string"  
      lastName:
        type: "string"
      email:
        type: "string"
      avatar:
        type: "object"
        properties:
          source:
            type: "string"
      quaification: 
        type: "string"
      yearofExp: 
        type: "string"
      joinedYear: 
        type: "string"  
    xml:
      name: "Principal"
  Student:
    type: "array"
    items:
      type: "object"
      properties:
        firstName:
          type: "string"
        middleName:
          type: "string"  
        lastName:
          type: "string"
        email:
          type: "string"
        avatar:
          type: "object"
        stream: 
          type: "string"
        passoutYear: 
          type: "string"
        joinedYear: 
          type: "string"
        currentYearclass: 
          type: "string"  
      xml:
        name: "Student"